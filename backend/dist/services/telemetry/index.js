"use strict";
/**
 * Telemetry Services Index
 *
 * This module provides a centralized export point for all telemetry-related services,
 * types, and utilities. It serves as the main entry point for the telemetry system.
 *
 * @author Generated by GitHub Copilot
 * @version 1.0.0
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TELEMETRY_STATUS = exports.TELEMETRY_DEFAULTS = exports.TELEMETRY_VERSION = exports.TelemetryEvaluationEngine = exports.evaluateMultipleAttributes = exports.evaluateTelemetryAttribute = exports.TelemetryService = void 0;
// Export all types
__exportStar(require("./types"), exports);
// Export evaluation engine
__exportStar(require("./evaluationEngine"), exports);
// Export main service
var telemetryService_1 = require("./telemetryService");
Object.defineProperty(exports, "TelemetryService", { enumerable: true, get: function () { return telemetryService_1.TelemetryService; } });
// Re-export commonly used functions for convenience
var evaluationEngine_1 = require("./evaluationEngine");
Object.defineProperty(exports, "evaluateTelemetryAttribute", { enumerable: true, get: function () { return evaluationEngine_1.evaluateTelemetryAttribute; } });
Object.defineProperty(exports, "evaluateMultipleAttributes", { enumerable: true, get: function () { return evaluationEngine_1.evaluateMultipleAttributes; } });
Object.defineProperty(exports, "TelemetryEvaluationEngine", { enumerable: true, get: function () { return evaluationEngine_1.TelemetryEvaluationEngine; } });
/**
 * Telemetry system version information
 */
exports.TELEMETRY_VERSION = {
    major: 1,
    minor: 0,
    patch: 0,
    full: '1.0.0'
};
/**
 * Telemetry system configuration defaults
 */
exports.TELEMETRY_DEFAULTS = {
    maxValuesPerAttribute: 200,
    defaultValueLimit: 50,
    batchSizeLimit: 1000,
    evaluationTimeout: 5000, // 5 seconds
    auditLogEnabled: true
};
/**
 * Telemetry system status and health checks
 */
exports.TELEMETRY_STATUS = {
    HEALTHY: 'healthy',
    DEGRADED: 'degraded',
    ERROR: 'error'
};
